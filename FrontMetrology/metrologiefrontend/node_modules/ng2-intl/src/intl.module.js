var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { Http, HttpModule } from '@angular/http';
import { NgModule } from '@angular/core';
import { IntlService, IntlLoader, IntlStaticLoader, FormatService } from './services';
import * as pipes from './pipes';
import * as components from './components';
export function i18nLoaderFactory(http) {
    return new IntlStaticLoader(http);
}
var PIPES = Object.keys(pipes).map(function (k) { return pipes[k]; });
var COMPONENTS = Object.keys(components).map(function (k) { return components[k]; });
var IntlModule = /** @class */ (function () {
    function IntlModule() {
    }
    IntlModule_1 = IntlModule;
    IntlModule.forRoot = function (providedLoader) {
        if (providedLoader === void 0) { providedLoader = {
            provide: IntlLoader,
            useFactory: i18nLoaderFactory,
            deps: [Http]
        }; }
        return {
            ngModule: IntlModule_1,
            providers: [providedLoader, IntlService]
        };
    };
    IntlModule = IntlModule_1 = __decorate([
        NgModule({
            imports: [HttpModule],
            declarations: PIPES.concat(COMPONENTS),
            providers: [FormatService],
            exports: [
                HttpModule
            ].concat(PIPES, COMPONENTS)
        })
    ], IntlModule);
    return IntlModule;
    var IntlModule_1;
}());
export { IntlModule };
//# sourceMappingURL=intl.module.js.map