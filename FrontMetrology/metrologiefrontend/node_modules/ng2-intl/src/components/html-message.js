var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Component, Input } from '@angular/core';
import { IntlService, FormatService } from '../services';
import { AbstractI18nComponent } from './abstractI18n';
var FormattedHtmlMessageComponent = /** @class */ (function (_super) {
    __extends(FormattedHtmlMessageComponent, _super);
    function FormattedHtmlMessageComponent(intlService, formatService) {
        return _super.call(this, intlService, formatService) || this;
    }
    FormattedHtmlMessageComponent.prototype.updateValue = function () {
        var _this = this;
        var _a = this, id = _a.id, defaultMessage = _a.defaultMessage;
        this.formatService.formatHTMLMessageAsync({ id: id, defaultMessage: defaultMessage }, this.values)
            .subscribe(function (msg) { return _this.result = msg; });
    };
    FormattedHtmlMessageComponent.prototype.ngOnChanges = function (changes) {
        if (changes['id'] || changes['values']) {
            this.updateValue();
        }
    };
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], FormattedHtmlMessageComponent.prototype, "id", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], FormattedHtmlMessageComponent.prototype, "defaultMessage", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FormattedHtmlMessageComponent.prototype, "values", void 0);
    FormattedHtmlMessageComponent = __decorate([
        Component({
            selector: 'FormattedHtmlMessage',
            template: "<span [innerHTML]=\"result\"></span>"
        }),
        __metadata("design:paramtypes", [IntlService, FormatService])
    ], FormattedHtmlMessageComponent);
    return FormattedHtmlMessageComponent;
}(AbstractI18nComponent));
export { FormattedHtmlMessageComponent };
//# sourceMappingURL=html-message.js.map