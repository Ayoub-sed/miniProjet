import { Observable } from 'rxjs/Observable';
import { IntlService } from './intl.service';
import { MessageDescriptor, DateTimeFormatOptions, NumberFormatOptions, PluralFormatOptions, RelativeFormatOptions } from '../interfaces';
export declare class FormatService {
    private intlService;
    constructor(intlService: IntlService);
    formatDate(value: any, options?: DateTimeFormatOptions & {
        format?: any;
    }): string;
    formatTime(value: any, options?: DateTimeFormatOptions & {
        format?: string;
    }): string;
    formatRelative(value: any, options?: RelativeFormatOptions & {
        format?: string;
        now?: any;
    }): string;
    formatNumber(value: any, options?: NumberFormatOptions & {
        format?: any;
    }): string;
    formatPlural(value: any, options?: PluralFormatOptions): string;
    formatMessageAsync(descriptor: MessageDescriptor, values?: {}): Observable<undefined | string>;
    formatMessage(descriptor: MessageDescriptor, values?: {}): undefined | string;
    private processFormatMessage(message, descriptor, values?);
    formatHTMLMessage(descriptor: MessageDescriptor, rawValues?: {
        [k: string]: any;
    }): undefined | string;
    formatHTMLMessageAsync(descriptor: MessageDescriptor, rawValues?: {
        [k: string]: any;
    }): Observable<undefined | string>;
    private escapeValues(rawValues?);
}
