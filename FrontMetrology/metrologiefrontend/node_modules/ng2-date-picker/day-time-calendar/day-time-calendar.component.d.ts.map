{"version":3,"file":"day-time-calendar.component.d.ts","sources":["day-time-calendar.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ECalendarValue } from '../common/types/calendar-value-enum';\r\nimport { SingleCalendarValue } from '../common/types/single-calendar-value';\r\nimport { ChangeDetectorRef, EventEmitter, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { ControlValueAccessor, FormControl, ValidationErrors, Validator } from '@angular/forms';\r\nimport { Moment } from 'moment';\r\nimport { CalendarValue } from '../common/types/calendar-value';\r\nimport { UtilsService } from '../common/services/utils/utils.service';\r\nimport { IDate } from '../common/models/date.model';\r\nimport { IDayTimeCalendarConfig } from './day-time-calendar-config.model';\r\nimport { DayTimeCalendarService } from './day-time-calendar.service';\r\nimport { DateValidator } from '../common/types/validator.type';\r\nimport { DayCalendarComponent } from '../day-calendar/day-calendar.component';\r\nimport { INavEvent } from '../common/models/navigation-event.model';\r\nexport declare class DayTimeCalendarComponent implements OnInit, OnChanges, ControlValueAccessor, Validator {\r\n    dayTimeCalendarService: DayTimeCalendarService;\r\n    utilsService: UtilsService;\r\n    cd: ChangeDetectorRef;\r\n    config: IDayTimeCalendarConfig;\r\n    displayDate: SingleCalendarValue;\r\n    minDate: SingleCalendarValue;\r\n    maxDate: SingleCalendarValue;\r\n    theme: string;\r\n    onChange: EventEmitter<IDate>;\r\n    onGoToCurrent: EventEmitter<void>;\r\n    onLeftNav: EventEmitter<INavEvent>;\r\n    onRightNav: EventEmitter<INavEvent>;\r\n    dayCalendarRef: DayCalendarComponent;\r\n    isInited: boolean;\r\n    componentConfig: IDayTimeCalendarConfig;\r\n    inputValue: CalendarValue;\r\n    inputValueType: ECalendarValue;\r\n    validateFn: DateValidator;\r\n    api: {\r\n        moveCalendarTo: any;\r\n    };\r\n    constructor(dayTimeCalendarService: DayTimeCalendarService, utilsService: UtilsService, cd: ChangeDetectorRef);\r\n    _selected: Moment;\r\n    get selected(): Moment;\r\n    set selected(selected: Moment);\r\n    ngOnInit(): void;\r\n    init(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    writeValue(value: CalendarValue): void;\r\n    registerOnChange(fn: any): void;\r\n    onChangeCallback(_: any): void;\r\n    registerOnTouched(fn: any): void;\r\n    validate(formControl: FormControl): ValidationErrors | any;\r\n    processOnChangeCallback(value: Moment): CalendarValue;\r\n    initValidators(): void;\r\n    dateSelected(day: IDate): void;\r\n    timeChange(time: IDate): void;\r\n    emitChange(): void;\r\n    moveCalendarTo(to: SingleCalendarValue): void;\r\n    onLeftNavClick(change: INavEvent): void;\r\n    onRightNavClick(change: INavEvent): void;\r\n}\r\n"]}