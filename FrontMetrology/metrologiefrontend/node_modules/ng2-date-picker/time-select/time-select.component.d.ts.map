{"version":3,"file":"time-select.component.d.ts","sources":["time-select.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ECalendarValue } from '../common/types/calendar-value-enum';\r\nimport { SingleCalendarValue } from '../common/types/single-calendar-value';\r\nimport { ChangeDetectorRef, EventEmitter, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { TimeSelectService, TimeUnit } from './time-select.service';\r\nimport { Moment } from 'moment';\r\nimport { ITimeSelectConfig, ITimeSelectConfigInternal } from './time-select-config.model';\r\nimport { ControlValueAccessor, FormControl, ValidationErrors, Validator } from '@angular/forms';\r\nimport { CalendarValue } from '../common/types/calendar-value';\r\nimport { UtilsService } from '../common/services/utils/utils.service';\r\nimport { IDate } from '../common/models/date.model';\r\nimport { DateValidator } from '../common/types/validator.type';\r\nexport declare class TimeSelectComponent implements OnInit, OnChanges, ControlValueAccessor, Validator {\r\n    timeSelectService: TimeSelectService;\r\n    utilsService: UtilsService;\r\n    cd: ChangeDetectorRef;\r\n    config: ITimeSelectConfig;\r\n    displayDate: SingleCalendarValue;\r\n    minDate: SingleCalendarValue;\r\n    maxDate: SingleCalendarValue;\r\n    minTime: SingleCalendarValue;\r\n    maxTime: SingleCalendarValue;\r\n    theme: string;\r\n    onChange: EventEmitter<IDate>;\r\n    isInited: boolean;\r\n    componentConfig: ITimeSelectConfigInternal;\r\n    inputValue: CalendarValue;\r\n    inputValueType: ECalendarValue;\r\n    validateFn: DateValidator;\r\n    hours: string;\r\n    minutes: string;\r\n    seconds: string;\r\n    meridiem: string;\r\n    showDecHour: boolean;\r\n    showDecMinute: boolean;\r\n    showDecSecond: boolean;\r\n    showIncHour: boolean;\r\n    showIncMinute: boolean;\r\n    showIncSecond: boolean;\r\n    showToggleMeridiem: boolean;\r\n    api: {\r\n        triggerChange: any;\r\n    };\r\n    constructor(timeSelectService: TimeSelectService, utilsService: UtilsService, cd: ChangeDetectorRef);\r\n    _selected: Moment;\r\n    get selected(): Moment;\r\n    set selected(selected: Moment);\r\n    ngOnInit(): void;\r\n    init(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    writeValue(value: CalendarValue): void;\r\n    registerOnChange(fn: any): void;\r\n    onChangeCallback(_: any): void;\r\n    registerOnTouched(fn: any): void;\r\n    validate(formControl: FormControl): ValidationErrors | any;\r\n    processOnChangeCallback(value: Moment): CalendarValue;\r\n    initValidators(): void;\r\n    decrease(unit: TimeUnit): void;\r\n    increase(unit: TimeUnit): void;\r\n    toggleMeridiem(): void;\r\n    emitChange(): void;\r\n    calculateTimeParts(time: Moment): void;\r\n    private handleConfigChange;\r\n}\r\n"]}