{"version":3,"file":"day-calendar.service.d.ts","sources":["day-calendar.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { Moment } from 'moment';\r\nimport { WeekDays } from '../common/types/week-days.type';\r\nimport { UtilsService } from '../common/services/utils/utils.service';\r\nimport { IDay } from './day.model';\r\nimport { IDayCalendarConfig, IDayCalendarConfigInternal } from './day-calendar-config.model';\r\nimport { IMonthCalendarConfig } from '../month-calendar/month-calendar-config';\r\nexport declare class DayCalendarService {\r\n    private utilsService;\r\n    readonly DEFAULT_CONFIG: IDayCalendarConfig;\r\n    private readonly DAYS;\r\n    constructor(utilsService: UtilsService);\r\n    getConfig(config: IDayCalendarConfig): IDayCalendarConfigInternal;\r\n    generateDaysMap(firstDayOfWeek: WeekDays): {\r\n        [key: string]: number;\r\n    };\r\n    generateMonthArray(config: IDayCalendarConfigInternal, month: Moment, selected: Moment[]): IDay[][];\r\n    generateWeekdays(firstDayOfWeek: WeekDays): Moment[];\r\n    isDateDisabled(date: Moment, config: IDayCalendarConfigInternal): boolean;\r\n    getHeaderLabel(config: IDayCalendarConfigInternal, month: Moment): string;\r\n    shouldShowLeft(min: Moment, currentMonthView: Moment): boolean;\r\n    shouldShowRight(max: Moment, currentMonthView: Moment): boolean;\r\n    generateDaysIndexMap(firstDayOfWeek: WeekDays): {\r\n        [key: number]: string;\r\n    };\r\n    getMonthCalendarConfig(componentConfig: IDayCalendarConfigInternal): IMonthCalendarConfig;\r\n    getDayBtnText(config: IDayCalendarConfigInternal, day: Moment): string;\r\n    getDayBtnCssClass(config: IDayCalendarConfigInternal, day: Moment): string;\r\n    private removeNearMonthWeeks;\r\n}\r\n"]}