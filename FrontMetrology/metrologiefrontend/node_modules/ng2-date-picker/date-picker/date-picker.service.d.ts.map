{"version":3,"file":"date-picker.service.d.ts","sources":["date-picker.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter } from '@angular/core';\r\nimport { IDatePickerConfig, IDatePickerConfigInternal } from './date-picker-config.model';\r\nimport { Moment } from 'moment';\r\nimport { UtilsService } from '../common/services/utils/utils.service';\r\nimport { IDayCalendarConfig } from '../day-calendar/day-calendar-config.model';\r\nimport { TimeSelectService } from '../time-select/time-select.service';\r\nimport { DayTimeCalendarService } from '../day-time-calendar/day-time-calendar.service';\r\nimport { ITimeSelectConfig } from '../time-select/time-select-config.model';\r\nimport { CalendarMode } from '../common/types/calendar-mode';\r\nexport declare class DatePickerService {\r\n    private utilsService;\r\n    private timeSelectService;\r\n    private daytimeCalendarService;\r\n    readonly onPickerClosed: EventEmitter<null>;\r\n    private defaultConfig;\r\n    constructor(utilsService: UtilsService, timeSelectService: TimeSelectService, daytimeCalendarService: DayTimeCalendarService);\r\n    getConfig(config: IDatePickerConfig, mode?: CalendarMode): IDatePickerConfigInternal;\r\n    getDayConfigService(pickerConfig: IDatePickerConfig): IDayCalendarConfig;\r\n    getDayTimeConfigService(pickerConfig: IDatePickerConfig): ITimeSelectConfig;\r\n    getTimeConfigService(pickerConfig: IDatePickerConfig): ITimeSelectConfig;\r\n    pickerClosed(): void;\r\n    isValidInputDateValue(value: string, config: IDatePickerConfig): boolean;\r\n    convertInputValueToMomentArray(value: string, config: IDatePickerConfig): Moment[];\r\n    private getDefaultFormatByMode;\r\n}\r\n"]}